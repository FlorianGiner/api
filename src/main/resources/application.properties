server.error.include-message=always
server.error.include-binding-errors=always

# An environment variable to more easily override the port for local testing.


# Postgres settings from env variables have priority over defaults for the
# pipeline. This enables later use of secrets in Kubernetes, which can be
# injected as env variables, but not into helm, because helm did its job
# at that point already.
#
# POSTGRESQLUSERNAME, POSTGRESQLPASSWORD and POSTGRESQLDATABASE,
# defined in helm/values.yaml, are being passed via deployment.yaml.
# The three variables represent the connection data for the postgres that
# is started for each release.
#
# $RELEASE_NAME-postgresql follows the default service name indicated by
# devops/pipelineartifacts. $RELEASE_NAME is provided by the pipeline.

server.port=${DOMAIN_MICROSERVICE_API_PORT:80}
postgres_server=${POSTGRES_SERVER:${RELEASE_NAME:cm-api-unknown}-postgresql}
postgres_port=${POSTGRES_PORT:5432}
postgres_user=${POSTGRES_USER:${POSTGRESQLUSERNAME:postgres}}
postgres_pw=${POSTGRES_PASSWORD:${POSTGRESQLPASSWORD:}}
postgres_db=${POSTGRES_DB:${POSTGRESQLDATABASE:postgresDB}}
spring.datasource.url=jdbc:postgresql://${postgres_server}:${postgres_port}/${postgres_db}?user=${postgres_user}&password=${postgres_pw}

spring.datasource.driverClassName=org.postgresql.Driver
# spring.datasource.username=postgres
# spring.datasource.password=postgres $CI-BRANCH-$CI_PROJECT_NAME

# Update automatically creates and changes tables if necessary. It is Unsafe
# incase there are multiple microservices working on the same database.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true

# Import Data - Uncommenting crashes application on MacOS on startup, because
# data.sql is being loaded before automatic schema creation.
#This to none loaded data for me
#spring.datasource.initialization-mode=always
#spring.datasource.data=classpath:data.sql

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Error on unknown properties supplied in JSON objects.
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=true